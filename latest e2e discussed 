name: E2E Test Pipeline

on: pull_request: types: [review_requested, review_submitted] workflow_dispatch: schedule: - cron: '0 22 * * *' # Run every day at 10 PM UTC push: branches: - main

jobs:

Store turbo cache to main branch on merge

store-main-cache: name: Store Turbo Cache to Main runs-on: ubuntu-latest if: github.ref == 'refs/heads/main' && github.event_name == 'push' steps: - name: Checkout repo uses: actions/checkout@v4 with: fetch-depth: 0

- name: Cache Turbo
    uses: actions/cache@v4
    with:
      path: .turbo
      key: ${{ runner.os }}-turbo-e2e-main

  - name: Build dashboard
    run: pnpm turbo run build --filter=@ember/dashboard --cache-dir=.turbo

  - name: Build backend
    run: pnpm turbo run build --filter=@ember/back-end --cache-dir=.turbo

e2e-test: name: Run E2E Tests runs-on: ubuntu-latest if: github.event_name != 'push' # Skip on push to main steps: - name: Checkout repo uses: actions/checkout@v4 with: fetch-depth: 0

- name: Cache Turbo
    uses: actions/cache@v4
    with:
      path: .turbo
      key: ${{ runner.os }}-turbo-e2e-${{ github.sha }}
      restore-keys: |
        ${{ runner.os }}-turbo-e2e-main

  - name: Build dashboard
    run: pnpm turbo run build --filter=@ember/dashboard --cache-dir=.turbo

  - name: Build backend
    run: pnpm turbo run build --filter=@ember/back-end --cache-dir=.turbo

  - name: Start servers
    run: |
      pnpm --filter back-end dev &
      pnpm --filter mock-slal-server dev &
      pnpm serve apps/dashboard/dist -l 8081 &
      sleep 15

  - name: Run E2E Test Suite
    run: pnpm --filter tests/e2e test:pipeline --cache-dir=.turbo


jobs:
  e2e-test:
    if: github.event_name != 'push' && (
          github.event_name != 'pull_request_review' || github.event.review.state == 'approved'
        )



Great! Here's a full set for your PR:


---

PR Title:

feat(ci): store Turbo cache to main key on push to avoid unnecessary E2E reruns


---

Commit Message (single line):

store Turbo build cache under main key on push to improve E2E suite efficiency


---

PR Description:

Implemented a CI enhancement to improve Turbo cache reliability and avoid unnecessary E2E test runs.

What’s changed:

Added a push trigger to the workflow

Introduced a new store-main-cache job that runs only on push to main

This job stores the current .turbo directory using a turbo-e2e-main cache key


Why:

E2E tests on PR approval run against the merged view with main, which is expected.

However, if unrelated changes land in main, it could cause the E2E suite to re-run on PRs that don’t touch dashboard/backend, just because the cache was invalid.

This change ensures we always have a stable main cache available for restore, making Turbo smarter and the E2E pipeline more efficient.


This approach was aligned with feedback from Sundar and Krishna. Let me know if anything can be refined!


---

Let me know if you also want a no-jira note or a variant with emojis or shorter format.


- name: Restore latest PR cache
  uses: actions/cache@v4
  with:
    path: .turbo
    key: ${{ runner.os }}-turbo-e2e-test-suite-main
    restore-keys: |
      ${{ runner.os }}-turbo-e2e-test-suite-

Sure! Here's a clean and conversational comment you can drop in reply to Chris:


---

Thanks, Chris! Really appreciate the detailed explanation.

We (Sundar, Krishna, and I) were discussing a slightly nuanced behavior we noticed:
When a PR is approved, the E2E suite runs against a merged view with main. That’s great and expected — but if there are unrelated changes in main (like infra updates), they can invalidate the cache for PRs that don’t actually touch dashboard or backend, causing unnecessary E2E reruns.

To help keep things efficient, we’ve implemented an approach where:

Turbo cache is saved with a main key on every push to main

PR approval runs use that as a restore key, so they get a stable cache snapshot aligned with the merged view


This doesn't stop E2Es from rerunning when they should — it just avoids noise when there are no relevant file changes.

Tried to implement this in a clean way as Sundar suggested and we aligned on, in a separate PR here: [link to your PR]

Let me know if you feel this could be improved!


---

Would you like a shorter or more casual variation too?


